//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(View), typeof(Base));
		L.RegFunction("OnMessage", OnMessage);
		L.RegFunction("OnEnter", OnEnter);
		L.RegFunction("OnExit", OnExit);
		L.RegFunction("OnPause", OnPause);
		L.RegFunction("OnResume", OnResume);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			View obj = (View)ToLua.CheckObject<View>(L, 1);
			IMessage arg0 = (IMessage)ToLua.CheckObject<IMessage>(L, 2);
			obj.OnMessage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			View obj = (View)ToLua.CheckObject<View>(L, 1);
			obj.OnEnter();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			View obj = (View)ToLua.CheckObject<View>(L, 1);
			obj.OnExit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			View obj = (View)ToLua.CheckObject<View>(L, 1);
			obj.OnPause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnResume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			View obj = (View)ToLua.CheckObject<View>(L, 1);
			obj.OnResume();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

